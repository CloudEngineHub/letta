name: OpenAI GPT-4 Capabilities Test

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: "Setup Python, Poetry and Dependencies"
      uses: packetcoders/action-setup-cache-python-poetry@main
      with:
        python-version: "3.12"
        poetry-version: "1.8.2"
        install-args: "-E dev -E external-tools"

  test_first_message:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test first message contains expected function call and inner monologue
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_returns_valid_first_message

  test_keyword_message:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model sends message with keyword
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_returns_keyword

  test_external_tool:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model uses external tool correctly
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_uses_external_tool

  test_chat_memory:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model recalls chat memory
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_recall_chat_memory

  test_archival_memory_search:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model uses 'archival_memory_search' to find secret
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_archival_memory_retrieval

  test_archival_memory_insert:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model uses 'archival_memory_insert' to insert archival memories
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_archival_memory_insert

  test_core_memory:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test model can edit core memories
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_openai_gpt_4_edit_core_memory

  test_embedding_endpoint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Test embedding endpoint
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: poetry run pytest -s -vv tests/test_endpoints.py::test_embedding_endpoint_openai
